From cdf4701f442149546043b155cddcc53116875f1c Mon Sep 17 00:00:00 2001
From: Dirk Mueller <dmueller@suse.de>
Date: Wed, 17 Feb 2010 23:17:36 +0100
Subject: [PATCH] Fix s390(x) atomic ops related crashes

The s390 implementation of the pointer related atomic ops
never worked before, and the memory barrier was mixed up
between the Acquire and the Relaxed variant. This fixes
both.

Merge-request: 2312
Reviewed-by: Thiago Macieira <thiago.macieira@nokia.com>

Origin: upstream, http://qt.gitorious.org/qt/qt/commit/cdf4701f442149546043b155cddcc53116875f1c

---
 src/corelib/arch/qatomic_s390.h |   16 ++++++----------
 1 files changed, 6 insertions(+), 10 deletions(-)

--- a/src/corelib/arch/qatomic_s390.h
+++ b/src/corelib/arch/qatomic_s390.h
@@ -366,11 +366,9 @@ template <typename T>
 Q_INLINE_TEMPLATE T* QBasicAtomicPointer<T>::fetchAndStoreRelaxed(T *newValue)
 {
 #ifndef __s390x__
-    return (T*)__CS_OLD_LOOP(reinterpret_cast<volatile long*>(_q_value), (int)newValue, "lr",
-                             "", "bcr 15,0\n");
+    return (T*)__CS_OLD_LOOP(&_q_value, (int)newValue, "lr", "", "");
 #else
-    return (T*)__CSG_OLD_LOOP(reinterpret_cast<volatile long*>(_q_value), (long)newValue, "lgr",
-                              "", "bcr 15,0\n");
+    return (T*)__CSG_OLD_LOOP(&_q_value, (long)newValue, "lgr", "", "");
 #endif
 }
 
@@ -378,9 +376,9 @@ template <typename T>
 Q_INLINE_TEMPLATE T* QBasicAtomicPointer<T>::fetchAndStoreAcquire(T *newValue)
 {
 #ifndef __s390x__
-    return (T*)__CS_OLD_LOOP(reinterpret_cast<volatile long*>(_q_value), (int)newValue, "lr", "", "");
+    return (T*)__CS_OLD_LOOP(&_q_value, (int)newValue, "lr", "", "bcr 15,0 \n");
 #else
-    return (T*)__CSG_OLD_LOOP(reinterpret_cast<volatile long*>(_q_value), (long)newValue, "lgr", "", "");
+    return (T*)__CSG_OLD_LOOP(&_q_value, (long)newValue, "lgr", "", "bcr 15,0 \n");
 #endif
 }
 
@@ -388,11 +386,9 @@ template <typename T>
 Q_INLINE_TEMPLATE T* QBasicAtomicPointer<T>::fetchAndStoreRelease(T *newValue)
 {
 #ifndef __s390x__
-    return (T*)__CS_OLD_LOOP(reinterpret_cast<volatile long*>(_q_value), (int)newValue, "lr",
-                             "bcr 15,0 \n", "");
+    return (T*)__CS_OLD_LOOP(&_q_value, (int)newValue, "lr", "bcr 15,0 \n", "");
 #else
-    return (T*)__CSG_OLD_LOOP(reinterpret_cast<volatile long*>(_q_value), (long)newValue, "lgr",
-                              "bcr 15,0\n", "");
+    return (T*)__CSG_OLD_LOOP(&_q_value, (long)newValue, "lgr", "bcr 15,0\n", "");
 #endif
 }
 
