commit b5b6cbb477b50c582d545b0e5e3a04626834e7e2
commit e645157a5dcf702df21b566441a56753eaefe6c4
Author: Oswald Buddenhagen <oswald.buddenhagen@nokia.com>
Date:   Tue Aug 17 18:59:51 2010 +0200
Date:   Mon Aug 23 19:42:00 2010 +0200

    let WebKit inject itself into the qt configuration

    i.e., don't explicitly deal with qt_webkit_version.pri outside of the
    webkit source directory.

    Task-number: QTBUG-12379
    Reviewed-by: Simon Hausmann

    fix build after first webkit self-injection attempt

    it didn't work for several reasons:
    - if the configures don't add webkit to QT_CONFIG, src.pro doesn't even
      know that it needs to build WebKit at all, so WebKit would never
      inject itself into the build. hen-and-egg problem.
    - the in-Qt build doesn't use WebKit.pro in the first place, so a proper
      recursive qmake would never create qt_webkit_version.pri. it worked
      under unix because configure collects all project files irrespective
      of the actual SUBDIRS structure.
    - a proper recursive qmake will cache the qt config, so the injection
      wouldn't be effective during the first qmake run

    so instead let the configures copy the pri file.

--- a/configure
+++ b/configure
@@ -7001,7 +7001,8 @@ if [ "$CFG_WEBKIT" = "auto" ]; then
 fi
 
 if [ "$CFG_WEBKIT" = "yes" ]; then
-    QT_CONFIG="$QT_CONFIG webkit"
+    # This include takes care of adding "webkit" to QT_CONFIG.
+    cp -f "$relpath/src/3rdparty/webkit/WebKit/qt/qt_webkit_version.pri" "$outpath/mkspecs/modules/qt_webkit_version.pri"
     # The reason we set CFG_WEBKIT, is such that the printed overview of what will be enabled, shows correctly.
     CFG_WEBKIT="yes"
 else
--- /dev/null
+++ b/mkspecs/modules/README
@@ -0,0 +1,3 @@
+Externally provided Qt modules may drop a qmake file here to become part of
+the current Qt configuration. The file name must follow the pattern
+"qt_<module>.pri". It must contain a "QT_CONFIG += <module>" statement.
--- a/mkspecs/modules/qt_webkit_version.pri
+++ /dev/null
@@ -1,4 +0,0 @@
-QT_WEBKIT_VERSION = 4.7.0
-QT_WEBKIT_MAJOR_VERSION = 4
-QT_WEBKIT_MINOR_VERSION = 7
-QT_WEBKIT_PATCH_VERSION = 0
--- a/projects.pro
+++ b/projects.pro
@@ -159,11 +159,13 @@ INSTALLS += qmake
 
 #mkspecs
 mkspecs.path=$$[QT_INSTALL_DATA]/mkspecs
-mkspecs.files=$$QT_BUILD_TREE/mkspecs/qconfig.pri $$QT_SOURCE_TREE/mkspecs/*
+mkspecs.files=$$QT_BUILD_TREE/mkspecs/qconfig.pri $$files($$QT_SOURCE_TREE/mkspecs/*)
+mkspecs.files -= $$QT_SOURCE_TREE/mkspecs/modules
 unix { 
    DEFAULT_QMAKESPEC = $$QMAKESPEC
    DEFAULT_QMAKESPEC ~= s,^.*mkspecs/,,g
    mkspecs.commands += $(DEL_FILE) $(INSTALL_ROOT)$$mkspecs.path/default; $(SYMLINK) $$DEFAULT_QMAKESPEC $(INSTALL_ROOT)$$mkspecs.path/default
+   mkspecs.files -= $$QT_SOURCE_TREE/mkspecs/default
 }
 win32:!equals(QT_BUILD_TREE, $$QT_SOURCE_TREE) {
     # When shadow building on Windows, the default mkspec only exists in the build tree.
--- a/src/3rdparty/webkit/WebCore/WebCore.pro
+++ b/src/3rdparty/webkit/WebCore/WebCore.pro
@@ -82,7 +82,7 @@ CONFIG(QTDIR_build) {
     symbian: TARGET =$$TARGET$${QT_LIBINFIX}
 }
 moduleFile=$$PWD/../WebKit/qt/qt_webkit_version.pri
-include($$moduleFile)
+isEmpty(QT_BUILD_TREE):include($$moduleFile)
 VERSION = $${QT_WEBKIT_MAJOR_VERSION}.$${QT_WEBKIT_MINOR_VERSION}.$${QT_WEBKIT_PATCH_VERSION}
 
 unix {
--- a/src/3rdparty/webkit/WebKit/qt/qt_webkit_version.pri
+++ b/src/3rdparty/webkit/WebKit/qt/qt_webkit_version.pri
@@ -2,4 +2,4 @@ QT_WEBKIT_VERSION = 4.7.0
 QT_WEBKIT_MAJOR_VERSION = 4
 QT_WEBKIT_MINOR_VERSION = 7
 QT_WEBKIT_PATCH_VERSION = 0
-QT_CONFIG *= webkit
+QT_CONFIG += webkit
--- a/tools/configure/configureapp.cpp
+++ b/tools/configure/configureapp.cpp
@@ -2659,8 +2659,13 @@ void Configure::generateOutputVars()
             qtConfig += "audio-backend";
     }
 
-    if (dictionary["WEBKIT"] == "yes")
-        qtConfig += "webkit";
+    if (dictionary["WEBKIT"] == "yes") {
+        // This include takes care of adding "webkit" to QT_CONFIG.
+        QString src = sourcePath + "/src/3rdparty/webkit/WebKit/qt/qt_webkit_version.pri";
+        QString dst = buildPath + "/mkspecs/modules/qt_webkit_version.pri";
+        QFile::remove(dst);
+        QFile::copy(src, dst);
+    }
 
     if (dictionary["DECLARATIVE"] == "yes") {
         if (dictionary[ "SCRIPT" ] == "no") {
