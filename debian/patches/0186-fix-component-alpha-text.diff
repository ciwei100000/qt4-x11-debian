qt-bugs@ issue :
Trolltech task ID :
applied: yes
author: Fredrik HÃ¶glund <fredrik@kde.org>
os: unix

This patch fixes component alpha (LCD hinted) text when it's drawn on a
non-opaque background. Qt doesn't initialize the alpha channel in the glyph
masks, which causes problems in Konsole when transparency is enabled, and
in other situations where the background isn't fully opaque.

--- qt4-x11-4.3.1.orig/src/gui/text/qfontengine_ft.cpp
+++ qt4-x11-4.3.1/src/gui/text/qfontengine_ft.cpp
@@ -716,7 +716,8 @@
                         uint red = src[x];
                         uint green = src[x+1];
                         uint blue = src[x+2];
-                        uint res = (red << 16) + (green << 8) + blue;
+                        uint alpha = green;
+                        uint res = (alpha << 24) + (red << 16) + (green << 8) + blue;
                         *dd = res;
                         ++dd;
                     }
@@ -730,7 +731,8 @@
                         uint blue = src[x];
                         uint green = src[x+1];
                         uint red = src[x+2];
-                        uint res = (red << 16) + (green << 8) + blue;
+                        uint alpha = green;
+                        uint res = (alpha << 24) + (red << 16) + (green << 8) + blue;
                         *dd = res;
                         ++dd;
                     }
@@ -754,7 +756,7 @@
                         uint high = (red*subpixel_filter[0][0] + green*subpixel_filter[0][1] + blue*subpixel_filter[0][2]) >> 8;
                         uint mid = (red*subpixel_filter[1][0] + green*subpixel_filter[1][1] + blue*subpixel_filter[1][2]) >> 8;
                         uint low = (red*subpixel_filter[2][0] + green*subpixel_filter[2][1] + blue*subpixel_filter[2][2]) >> 8;
-                        uint res = (high << 16) + (mid << 8) + low;
+                        uint res = (mid << 24) + (high << 16) + (mid << 8) + low;
                         dst[x] = res;
                     }
                     dst += info.width;
@@ -769,7 +771,7 @@
                         uint high = (red*subpixel_filter[0][0] + green*subpixel_filter[0][1] + blue*subpixel_filter[0][2]) >> 8;
                         uint mid = (red*subpixel_filter[1][0] + green*subpixel_filter[1][1] + blue*subpixel_filter[1][2]) >> 8;
                         uint low = (red*subpixel_filter[2][0] + green*subpixel_filter[2][1] + blue*subpixel_filter[2][2]) >> 8;
-                        uint res = (high << 16) + (mid << 8) + low;
+                        uint res = (mid << 24) + (high << 16) + (mid << 8) + low;
                         dst[x] = res;
                     }
                     dst += info.width;
