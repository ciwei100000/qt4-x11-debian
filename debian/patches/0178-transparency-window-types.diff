qt-bugs@ issue : 167707
Trolltech task ID : none
bugs.kde.org number : none
applied: no
author: Lubos Lunak <l.lunak@kde.org>

This patch adds^H^H^H^Hfixes Qt support for new window types used for compositing.


--- a/src/gui/kernel/qdnd_x11.cpp
+++ b/src/gui/kernel/qdnd_x11.cpp
@@ -273,8 +273,8 @@
 class QShapedPixmapWidget : public QWidget {
 
 public:
-    QShapedPixmapWidget(int screen = -1) :
-        QWidget(QApplication::desktop()->screen(screen),
+    QShapedPixmapWidget(QWidget* w) :
+        QWidget(w,
                 Qt::Tool | Qt::FramelessWindowHint | Qt::X11BypassWindowManagerHint)
     {
         setAttribute(Qt::WA_X11NetWmWindowTypeDND);
@@ -1448,7 +1448,9 @@
     if ((qt_xdnd_current_screen == -1 && screen != X11->defaultScreen) || (screen != qt_xdnd_current_screen)) {
         // recreate the pixmap on the new screen...
         delete xdnd_data.deco;
-        xdnd_data.deco = new QShapedPixmapWidget(screen);
+        QWidget* parent = object->source()->window()->x11Info().screen() == screen
+            ? object->source()->window() : QApplication::desktop()->screen(screen);
+        xdnd_data.deco = new QShapedPixmapWidget(parent);
         if (!QWidget::mouseGrabber()) {
             updatePixmap();
             xdnd_data.deco->grabMouse();
@@ -1909,7 +1911,7 @@
 
     object = o;
     object->d_func()->target = 0;
-    xdnd_data.deco = new QShapedPixmapWidget();
+    xdnd_data.deco = new QShapedPixmapWidget(object->source()->window());
 
     willDrop = false;
 
--- a/src/gui/kernel/qtooltip.cpp
+++ b/src/gui/kernel/qtooltip.cpp
@@ -142,7 +142,7 @@
 QTipLabel *QTipLabel::instance = 0;
 
 QTipLabel::QTipLabel(const QPoint &pos, const QString &text, QWidget *w)
-    : QLabel(QApplication::desktop()->screen(getTipScreen(pos, w)), Qt::ToolTip), widget(0)
+    : QLabel(w, Qt::ToolTip), widget(0)
 {
     delete instance;
     instance = this;
--- a/src/gui/kernel/qwidget_x11.cpp
+++ b/src/gui/kernel/qwidget_x11.cpp
@@ -56,6 +56,8 @@
 #include "qstack.h"
 #include "qcolormap.h"
 #include "qdebug.h"
+#include "qmenu.h"
+#include "private/qmenu_p.h"
 #include "private/qbackingstore_p.h"
 
 //extern bool qt_sendSpontaneousEvent(QObject *, QEvent *); //qapplication_x11.cpp
@@ -177,7 +179,8 @@
              || w->windowType() == Qt::Tool
              || w->windowType() == Qt::SplashScreen
              || w->windowType() == Qt::ToolTip
-             || w->windowType() == Qt::Drawer)
+             || w->windowType() == Qt::Drawer
+             || w->windowType() == Qt::Popup)
             && !w->testAttribute(Qt::WA_X11BypassTransientForHint));
 }
 
@@ -1660,6 +1663,18 @@
         // udpate WM_TRANSIENT_FOR
         if (isTransient(q)) {
             QWidget *p = q->parentWidget();
+#ifndef QT_NO_MENU
+            // hackish ... try to find the main window related to this popup
+            if (qobject_cast< QMenu* >( q )) {
+                p = static_cast<QMenuPrivate*>(this)->causedPopup.widget;
+                if ( p == NULL )
+                    p = q->parentWidget();
+                if ( p == NULL )
+                    p = QApplication::widgetAt( q->pos());
+                if ( p == NULL )
+                    p = qApp->activeWindow();
+            }
+#endif
             if (p)
                 p = p->window();
             if (p) {
--- a/src/gui/widgets/qmenubar.cpp
+++ b/src/gui/widgets/qmenubar.cpp
@@ -1218,12 +1218,8 @@
     if(e->type() == QEvent::ActionAdded) {
         connect(e->action(), SIGNAL(triggered()), this, SLOT(_q_actionTriggered()));
         connect(e->action(), SIGNAL(hovered()), this, SLOT(_q_actionHovered()));
-        if (e->action()->menu())
-            e->action()->menu()->setAttribute(Qt::WA_X11NetWmWindowTypeDropDownMenu, true);
     } else if(e->type() == QEvent::ActionRemoved) {
         e->action()->disconnect(this);
-        if (e->action()->menu())
-            e->action()->menu()->setAttribute(Qt::WA_X11NetWmWindowTypeDropDownMenu, false);
     }
     if (isVisible()) {
         d->updateGeometries();
--- a/src/gui/widgets/qmenu.cpp
+++ b/src/gui/widgets/qmenu.cpp
@@ -1705,6 +1705,18 @@
     d->tearoffHighlighted = 0;
     d->motions = 0;
     d->doChildEffects = true;
+#ifndef QT_NO_MENUBAR
+    QWidget* top = this;
+    for(;;) {
+        if (QMenu* m = qobject_cast< QMenu* >( top )) {
+            if(m->d_func()->causedPopup.widget == NULL)
+                break; // --->
+            top = m->d_func()->causedPopup.widget;
+        } else
+            break; // -->
+    }
+    setAttribute(Qt::WA_X11NetWmWindowTypeDropDownMenu, qobject_cast< QMenuBar* >( top ) != NULL);
+#endif
 
     ensurePolished(); // Get the right font
     emit aboutToShow();
