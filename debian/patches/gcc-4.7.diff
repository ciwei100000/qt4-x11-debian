Author: Pino Toscano <pino@debian.org>
Description: Fix build failures with GCC 4.7
 Fix build issues with GCC 4.7, like code wrongly mistaken for operator"".
Origin: vendor
Forwarded: no
Last-Update: 2012-04-29

---
 src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSGlobalObject.h      |    4 +---
 src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSStaticScopeObject.h |    3 +--
 2 files changed, 2 insertions(+), 5 deletions(-)

--- a/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSGlobalObject.h
+++ b/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSGlobalObject.h
@@ -57,9 +57,7 @@ namespace JSC {
     
     class JSGlobalObject : public JSVariableObject {
     protected:
-        using JSVariableObject::JSVariableObjectData;
-
-        struct JSGlobalObjectData : public JSVariableObjectData {
+        struct JSGlobalObjectData : public JSVariableObject::JSVariableObjectData {
             // We use an explicit destructor function pointer instead of a
             // virtual destructor because we want to avoid adding a vtable
             // pointer to this struct. Adding a vtable pointer would force the
--- a/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSStaticScopeObject.h
+++ b/src/3rdparty/javascriptcore/JavaScriptCore/runtime/JSStaticScopeObject.h
@@ -32,8 +32,7 @@ namespace JSC{
     
     class JSStaticScopeObject : public JSVariableObject {
     protected:
-        using JSVariableObject::JSVariableObjectData;
-        struct JSStaticScopeObjectData : public JSVariableObjectData {
+        struct JSStaticScopeObjectData : public JSVariableObject::JSVariableObjectData {
             JSStaticScopeObjectData()
                 : JSVariableObjectData(&symbolTable, &registerStore + 1)
             {
