From: Modestas Vainius <modax@debian.org>
Subject: Fix compilation of some QBasicAtomicInt methods with gcc 4.6
Bug-Debian: http://bugs.debian.org/625825
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/gcc-4.5/+bug/675347
Forwarded: not-needed
Origin: vendor
Last-Update: 2011-05-07

-fstrict-volatile-bitfields flag, which is enabled by default on arm* since gcc
4.6, triggers a FTBFS in QBasicAtomicInt::fetchAndStoreOrdered(int) (asm code)
[1]. While it's believed to be a gcc issue (see Ubuntu bug), workaround it in
Qt itself by disabling strict-volatile-bitfields optimazation flag for this
function on arm*. Hackish but it should do it until gcc is fixed.

[1] In file included from /usr/include/qt4/QtCore/qatomic_arch.h:54:0,
                 from /usr/include/qt4/QtCore/qbasicatomic.h:227,
                 from /usr/include/qt4/QtCore/qatomic.h:46,
                 from /usr/include/qt4/QtCore/QAtomicInt:1,
                 from qatomic.cpp:1:
/usr/include/qt4/QtCore/qatomic_arm.h: In function 'int main(int, char**)':
/usr/include/qt4/QtCore/qatomic_arm.h:232:35: error: output number 1 not directly addressable
/usr/include/qt4/QtCore/qatomic_arm.h:232:35: error: output number 1 not directly addressable


--- a/src/corelib/thread/qbasicatomic.h
+++ b/src/corelib/thread/qbasicatomic.h
@@ -94,6 +94,14 @@ public:
         return *this;
     }
 
+// Debian: disable -fstrict-volatile-bitfields for some functions on arm* due
+// to the bug in gcc 4.6 (#625825)
+#if defined(QT_ARCH_ARM) && defined(Q_CC_GNU) && (__GNUC__ > 4 || __GNUC__ == 4 && __GNUC_MINOR__ >= 6)
+#define DEBIAN_QATOMIC_ARM_NO_VOL_BITF __attribute((optimize("no-strict-volatile-bitfields")))
+#else
+#define DEBIAN_QATOMIC_ARM_NO_VOL_BITF
+#endif
+
     // Atomic API, implemented in qatomic_XXX.h
 
     static bool isReferenceCountingNative();
@@ -116,7 +124,7 @@ public:
     int fetchAndStoreRelaxed(int newValue);
     int fetchAndStoreAcquire(int newValue);
     int fetchAndStoreRelease(int newValue);
-    int fetchAndStoreOrdered(int newValue);
+    int fetchAndStoreOrdered(int newValue) DEBIAN_QATOMIC_ARM_NO_VOL_BITF;
 
     static bool isFetchAndAddNative();
     static bool isFetchAndAddWaitFree();
